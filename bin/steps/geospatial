#!/usr/bin/env bash

GEO_VENDOR="https://s3.amazonaws.com/boundlessps-public/cf/lib/vendor.tar.gz"
PY_MAPNIK="https://s3.amazonaws.com/boundlessps-public/cf/lib/site-packages.tar.gz"

source $BIN_DIR/utils

bpwatch start geospatial_install

# If GDAL exists within requirements, use vendored osgeo.
if (pip-grep -s requirements.txt GDAL &> /dev/null) then
  echo "-----> Bootstrapping GDAL 2.1.0"
  echo "-----> Bootstrapping GEOS 3.5.0"
  echo "-----> Bootstrapping PROJ 4.9.2"
  echo "-----> Bootstrapping PostgreSQL Client 9.5.3"
  echo "-----> Bootstrapping MAPNIK 2.3.0"

  # check if osgeo-bundle is present in vendor
  if [ -f "$ROOT_DIR/vendor/osgeo-bundle-1.0.0.tar.gz" ]; then
      tar zxf $ROOT_DIR/vendor/osgeo-vendor.tar.gz -C .heroku/ &> /dev/null
  else
      curl $GEO_VENDOR -s | tar zxv -C .heroku/ &> /dev/null
  fi
  # check if mapnik-modules is present in vendor
  if [ -f "$ROOT_DIR/vendor/mapnik-modules-2.3.0.tar.gz" ]; then
      tar zxf $ROOT_DIR/vendor/mapnik-modules-2.3.0.tar.gz -C .heroku/python/lib/python2.7/site-packages/ &> /dev/null
  else
      curl $PY_MAPNIK -s | tar zxf -C .heroku/python/lib/python2.7/site-packages/ &> /dev/null
  fi
  mkdir -p .profile.d/
  echo 'export LIBKML_LIBS="${LIBRARY_PATH}"' > .profile.d/geospatial.sh
  echo 'export GDAL_DATA="/app/.heroku/vendor/share/gdal"' > .profile.d/geospatial.sh
  echo 'export PROJ_LIB="/app/.heroku/vendor/share/proj"' > .profile.d/geospatial.sh
  echo 'export GEOS_LIBRARY_PATH="/app/.heroku/vendor/lib"' > .profile.d/geospatial.sh
  source .profile.d/geospatial.sh
fi

bpwatch stop geospatial_install
